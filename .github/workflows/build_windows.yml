name: Build and release windows
on: 
    workflow_dispatch:

permissions:
  contents: write

jobs:
    build_and_release_windows:
        name: Build and Release for Windows
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v3
            - name: Prepare folders
              run: |
                mkdir keys
            - name: Setup secret keys
              shell: bash
              run: |
                echo ${{ secrets.CERTIFICATE }} | base64 --decode > keys/CERTIFICATE.pfx
            - name: Get app version from pubspec.yaml
              run: |
                choco install yq
                $full_version=(yq -r .version pubspec.yaml)
                $display_version = $full_version -split '\+' | Select-Object -First 1
                echo "APP_VERSION=$display_version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            - name: Check fetched app version
              run: |
                echo "${{ env.APP_VERSION }}"
            - uses: subosito/flutter-action@v2
            - name: Enable windows build
              run: flutter config --enable-windows-desktop
            - name: Build windows release artifacts
              run: flutter build windows --release
            - name: Archive and compress release artifacts
              run: |
                $outputPath = "build\windows\runner\Release\mkv_profile-${{env.APP_VERSION}}-windows.zip"
                Compress-Archive -Path "build\windows\runner\Release\*" -DestinationPath $outputPath
            - name: Create msix installer
              run: |
                dart run msix:create `
                --certificate-password=${{ secrets.CERTIFICATE_PASSWORD }} `
                --certificate-path=${{ github.workspace }}/keys/CERTIFICATE.pfx `
                --output-path=build/windows/runner/Release `
                --output-name=mkv_profile-${{env.APP_VERSION}}-windows
            - name: Upload to Github release
              uses: softprops/action-gh-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: v${{env.APP_VERSION}}
                generate_release_notes: true
                files: |
                  build/windows/runner/Release/mkv_profile-${{env.APP_VERSION}}-windows.zip
                  build/windows/runner/Release/mkv_profile-${{env.APP_VERSION}}-windows.msix