name: mkv_profile
description: Automatically manage and mux series or movie files to the common conventions used by media players and media servers. The GUI is intentionally made simple and is designed for least user interactions by implementing per profile configuration to manage files and generate a command to be used on muxing process.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

version: 0.6.5+24

environment:
  sdk: '>=3.1.0 <4.0.0'

dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  async: ^2.11.0
  collection: ^1.17.1
  desktop_drop: ^0.4.1
  diacritic: ^0.1.3
  equatable: ^2.0.5
  ffi: ^2.0.2
  file_selector: ^1.0.3
  flex_color_picker: ^3.2.2
  flex_color_scheme: ^7.1.2
  fluent_ui: ^4.6.0
  flutter_acrylic: ^1.1.2
  flutter_markdown: ^0.6.17
  http: ^1.1.0
  intl: ^0.18.0
  markdown: ^7.1.1
  multi_split_view: ^2.4.0
  package_info_plus: ^5.0.1
  path: ^1.8.3
  path_provider: ^2.0.15
  pluto_grid: ^7.0.1
  provider: ^6.0.5
  shared_preferences: ^2.1.1
  shimmer: ^3.0.0
  system_theme: ^3.0.0
  tuple: ^2.0.2
  url_launcher: ^6.1.11
  version: ^3.0.2
  win32: ^5.0.5
  window_manager: ^0.3.2

dev_dependencies:
  flutter_lints: ^4.0.0
  flutter_launcher_icons: ^0.13.1
  msix: ^3.14.2
  flutter_test:
    sdk: flutter

flutter:
  uses-material-design: true
  generate: true

  fonts:
    - family: NotoColorEmojiWindows
      fonts:
        - asset: assets/fonts/NotoColorEmoji_Windows.ttf

  assets:
    - assets/icons/
    - assets/json/
    - assets/mkvmerge/
    - assets/mediainfo/

flutter_launcher_icons:
  windows:
    generate: true
    image_path: "assets/icons/mkv_profile.png"
    icon_size: 256

msix_config:
  display_name: MKV Profile
  # Refer to https://www.ibm.com/docs/en/ibm-mq/7.5?topic=certificates-distinguished-names
  # Arrangement/Order must be the same as the DN on the CRT file under Details Tab > Subject
  publisher: E=silan.harry@gmail.com, CN=harlanx, L=SanJose, S=NuevaEcija, C=PH
  publisher_display_name: harlanx
  identity_name: harlanx.mkvprofile
  logo_path: ./assets/icons/mkv_profile.ico
  start_menu_icon_path: ./assets/icons/mkv_profile.ico
  tile_icon_path: ./assets/icons/mkv_profile.ico
  icons_background_color: transparent
  # Specify the supported languages if the app supports Internationalization.
  languages: en, fil
  # Unfortunately I had to use Self-Signed Certificate since I'm not publishing this app on Microsoft Store
  # and trusted signed certificates comes with a huge cost...
  # I'll just add an instruction how to install the certificate on the client/user's machine in order for
  # the app to be installed using an msix installer or tell them to just use the extracted archive file
  # where they can run the app portably.
  # The link below is the instruction for installing certificate.
  # https://diyusthad.com/2022/10/solved-untrusted-certificate-when-installing-msix-build-using-flutter.html
  # The self signed certificate was created by following the official guide from flutter docs
  # https://docs.flutter.dev/platform-integration/windows/building#msix-packaging
  # Path and password can be manually typed it in during testing, for deployment it has been set up in
  # repo secrets and specified only on github actions
  certificate_path:
  certificate_password:
  sign_msix: true
  install_certificate: false
  # For the specifications of the capabilities of the app
  # Refer to https://docs.microsoft.com/en-us/windows/uwp/packaging/app-capability-declarations
  capabilities: "videosLibrary,documentsLibrary,codeGeneration"
  # Don't publish to Microsoft Store
  store: false